<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://slimicide.github.io/</id><title>Slimicide</title><subtitle>I break things on purpose sometimes.</subtitle> <updated>2023-03-01T18:31:48+00:00</updated> <author> <name>Slimicide</name> <uri>https://slimicide.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://slimicide.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://slimicide.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 Slimicide </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>CVE-2022-27677 - Low-hanging SYSTEM shells</title><link href="https://slimicide.github.io/posts/CVE-2022-27677/" rel="alternate" type="text/html" title="CVE-2022-27677 - Low-hanging SYSTEM shells" /><published>2023-02-20T12:00:00+00:00</published> <updated>2023-02-20T12:00:00+00:00</updated> <id>https://slimicide.github.io/posts/CVE-2022-27677/</id> <content src="https://slimicide.github.io/posts/CVE-2022-27677/" /> <author> <name>Slimicide</name> </author> <category term="Research" /> <category term="Windows" /> <summary> As an enthusiast for all things offensive security for the last almost two years, I decided it was high time I stopped reading about other people’s interesting CVEs and instead go and find my own. When choosing a target I decided I wanted it to be in an application I actually used, not a XSS in some obscure piece of software somewhere in the depths of the internet. As a big fan of the Ryzen lin... </summary> </entry> <entry><title>Poison Null Byte - Forging a LIBC Leak</title><link href="https://slimicide.github.io/posts/Poison-Null-Byte-Forging-A-LIBC-Leak/" rel="alternate" type="text/html" title="Poison Null Byte - Forging a LIBC Leak" /><published>2022-11-25T12:00:00+00:00</published> <updated>2022-11-25T12:00:00+00:00</updated> <id>https://slimicide.github.io/posts/Poison-Null-Byte-Forging-A-LIBC-Leak/</id> <content src="https://slimicide.github.io/posts/Poison-Null-Byte-Forging-A-LIBC-Leak/" /> <author> <name>Slimicide</name> </author> <category term="Research" /> <category term="Exploits" /> <summary> I’ve been doing a lot of work recently on learning the heap and the techniques leveraged to exploit it through HeapLAB by Max Kamper. Particularly the heap as it pertains to Linux with GLIBC. One such technique is known as the Poison Null Byte. The Poison Null Byte is a technique in which a heap overflow of just a single byte allows for the manipulation of heap metadata and ultimately, enabl... </summary> </entry> <entry><title>ROPEmporium - Write4</title><link href="https://slimicide.github.io/posts/ROPEmporium-Write4/" rel="alternate" type="text/html" title="ROPEmporium - Write4" /><published>2022-10-11T12:00:00+00:00</published> <updated>2022-10-11T12:00:00+00:00</updated> <id>https://slimicide.github.io/posts/ROPEmporium-Write4/</id> <content src="https://slimicide.github.io/posts/ROPEmporium-Write4/" /> <author> <name>Slimicide</name> </author> <category term="Research" /> <category term="Exploits" /> <summary> For this second post about Binary Exploitation, I was originally going to do just one step up from the last one, but then I decided the act of pushing arguments onto the stack for use in a function wasn’t worth a whole post on its own. So I have ultimately decided to kick it up a few notches and dive right into Write4 from ROPEmporium and hopefully fill in the blanks as I go. The first post in... </summary> </entry> <entry><title>Basic Buffer Overflows</title><link href="https://slimicide.github.io/posts/Basic-Buffer-Overflows/" rel="alternate" type="text/html" title="Basic Buffer Overflows" /><published>2022-09-01T20:00:00+00:00</published> <updated>2022-09-01T20:00:00+00:00</updated> <id>https://slimicide.github.io/posts/Basic-Buffer-Overflows/</id> <content src="https://slimicide.github.io/posts/Basic-Buffer-Overflows/" /> <author> <name>Slimicide</name> </author> <category term="Research" /> <category term="Exploits" /> <summary> Binary exploitation has always interested me. Anything low-level does. You always hear about ROPs and NOPs, Overflows and Shellcode. It’s definitely a very exciting and rewarding skill to learn. Like with all things, but especially low-level things; you have to start small. For binary exploitation, that means beginning with the humble Buffer Overflow. With this post, I’ll be attempting to crea... </summary> </entry> <entry><title>Persistence with DLL Hijacking</title><link href="https://slimicide.github.io/posts/Persistence-With-DLL-Hijacking/" rel="alternate" type="text/html" title="Persistence with DLL Hijacking" /><published>2022-07-23T12:00:00+00:00</published> <updated>2022-07-23T12:00:00+00:00</updated> <id>https://slimicide.github.io/posts/Persistence-With-DLL-Hijacking/</id> <content src="https://slimicide.github.io/posts/Persistence-With-DLL-Hijacking/" /> <author> <name>Slimicide</name> </author> <category term="Research" /> <category term="Windows" /> <summary> Recently I’ve been playing around with Procmon from SysInternals to try and find interesting DLL Hijacking opportunities. While exploring different software and seeing what would fall into my Procmon filter, I decided that I wanted to write about it and take a break from more or less exclusively writing up HackTheBox machines and instead write up something I’m actively looking into. I found a p... </summary> </entry> </feed>
